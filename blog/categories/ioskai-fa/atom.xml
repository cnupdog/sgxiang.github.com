<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios开发 | Sgxiang]]></title>
  <link href="http://sgxiang.github.io/blog/categories/ioskai-fa/atom.xml" rel="self"/>
  <link href="http://sgxiang.github.io/"/>
  <updated>2014-01-06T23:49:05+08:00</updated>
  <id>http://sgxiang.github.io/</id>
  <author>
    <name><![CDATA[Sgxiang]]></name>
    <email><![CDATA[sgxiang1992@icloud.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【APP开发笔记】天工OA]]></title>
    <link href="http://sgxiang.github.io/blog/2014/01/03/%5B%28appkai-fa-bi-ji-%29%5D-tian-gong-oa/"/>
    <updated>2014-01-03T22:03:00+08:00</updated>
    <id>http://sgxiang.github.io/blog/2014/01/03/[(appkai-fa-bi-ji-)]-tian-gong-oa</id>
    <content type="html"><![CDATA[<p>从11月28号开始找到工作，就开始忙了，都无暇去顾及整理资料和学习。</p>

<p>在公司前一个星期做了个内部的OA应用，现在慢慢整理一下项目相关的代码片段以备用。</p>

<p><img src="http://sgxiang.github.io/images/Screenshot_1.png" alt="" /> <img src="http://sgxiang.github.io/images/Screenshot_2.png" alt="" /> <img src="http://sgxiang.github.io/images/Screenshot_3.png" alt="" /> <img src="http://sgxiang.github.io/images/Screenshot_4.png" alt="" /></p>

<!--more-->


<h4>UITabBar</h4>

<p><code>objc
self.tabBar.tintColor = UIColorFromRGB(WHITECOLOR);   //设置tabBar被选中时文字的颜色
UITabBarItem *item=[[UITabBarItem alloc] initWithTitle:@"我的主页" image:nil tag:0];
[item setFinishedSelectedImage:[UIImage imageNamed:@"toolbar_today_work_selected"] withFinishedUnselectedImage:[UIImage imageNamed:@"toolbar_today_work"]];
[item setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:UIColorFromRGB(WHITECOLOR), UITextAttributeTextColor,nil] forState:UIControlStateNormal];
</code></p>

<h4>修复ios7视图控制器返回手势</h4>

<p>在ios7中如果push一个视图控制器，然后设置了self.navigationItem.leftBarButtonItem,那么在push过去的视图上无法使用ios7默认的在最左边滑动返回的功能。</p>

<p>我的解决思路是：</p>

<p>在主视图控制器上</p>

<p>```objc
//.h文件
@interface MainViewController : UINavigationController&lt;UIGestureRecognizerDelegate,UINavigationControllerDelegate>
@end
//.m文件</p>

<h1>define KindClass(x) ([viewController isMemberOfClass:[x class]])</h1>

<ul>
<li>(void)viewDidLoad
{
  [super viewDidLoad];  <br/>
  //修复ios7手势
  __weak MainViewController *weakSelf = self;
  if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]){
      self.interactivePopGestureRecognizer.delegate = weakSelf;
      self.delegate = weakSelf;
  }
}</li>
<li>(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated
{
  //修复ios7手势
  if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]){
      self.interactivePopGestureRecognizer.enabled = NO;
  }
  [super pushViewController:viewController animated:animated];
}</li>
<li><p>(void)navigationController:(UINavigationController <em>)navigationController didShowViewController:(UIViewController </em>)viewController animated:(BOOL)animate
{</p>

<p>  //修复ios7手势
  if (KindClass(MyInfoTableViewController)||KindClass(UserWorkViewController)||KindClass(OrderViewController)||KindClass(SettingViewController)) {
      if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]){
          self.interactivePopGestureRecognizer.enabled = NO;
      }
  }else{
      if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]){
          self.interactivePopGestureRecognizer.enabled = YES;
      }
  }
}
```</p></li>
</ul>


<p>在push的时候设置掉手势，当将展示视图的时候在需要手势的视图中开启手势。</p>

<h4>时间</h4>

<p><code>objc
NSDate *now = [NSDate date];
NSDateFormatter *formatter = [[NSDateFormatter alloc]init];
[formatter setDateFormat:@"HHmm"];
int nowTime = [[formatter stringFromDate:now]intValue];
</code></p>

<h4>判断ios7</h4>

<p>#define IOS7 [[[UIDevice currentDevice]systemVersion] floatValue] >= 7.0</p>

<h4>设置颜色</h4>

<p>#define UIColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) >> 16))/255.0 green:((float)((rgbValue &amp; 0xFF00) >> 8))/255.0 blue:((float)(rgbValue &amp; 0xFF))/255.0 alpha:1.0]</p>

<p>#define UIColorFromRGBAndAlpha(rgbValue,alphaValue) [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) >> 16))/255.0 green:((float)((rgbValue &amp; 0xFF00) >> 8))/255.0 blue:((float)(rgbValue &amp; 0xFF))/255.0 alpha:alphaValue]</p>

<h4>通知</h4>

<p>```objc
//添加本地通知
&ndash;(void)addOrUpdateNotificationWithKey:(NSString *)key{</p>

<pre><code>[self removeNotificationWithKey:key];
UILocalNotification *notification = [[UILocalNotification alloc]init];
NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
[dateFormatter setDateFormat:@"HH:mm"];
NSDate *pushDate = nil;
if(notification!=nil){ 
    notification.timeZone = [NSTimeZone defaultTimeZone];
    notification.repeatInterval = kCFCalendarUnitDay;
    if (_user.isUseMusic) {
        notification.soundName = UILocalNotificationDefaultSoundName;//设置声音
    }
    //设置推送时间和内容
    if ([key isEqualToString:notificationOAKey]) {
        pushDate = [dateFormatter dateFromString:_user.oaTime];
        notification.alertBody = @"写日志的时间到了";
    }else{
        notification.alertBody = @"订餐时间到了";
        pushDate = [dateFormatter dateFromString:@"09:00"];
    }
    notification.fireDate = pushDate;
    //设置提示数目
    notification.applicationIconBadgeNumber += 1;
    //设置携带的信息
    NSDictionary *info = [NSDictionary dictionaryWithObject:key forKey:@"key"];
    notification.userInfo = info;
    UIApplication *app = [UIApplication sharedApplication];
    [app scheduleLocalNotification:notification];
}
dateFormatter = nil;
notification = nil;
</code></pre>

<p>}
//解除通知
&ndash;(void)removeNotificationWithKey:(NSString *)key{</p>

<pre><code>UIApplication *app = [UIApplication sharedApplication];
NSArray *localArray = [app scheduledLocalNotifications]; 
//声明本地通知对象
UILocalNotification *localNotification = nil;
if (localArray) {
    for (UILocalNotification *noti in localArray) {
        NSDictionary *dict = noti.userInfo;
        if (dict) {
            NSString *inKey = [dict objectForKey:@"key"];
            if ([inKey isEqualToString:key]) {
                if (localNotification){
                    localNotification = nil;
                }
                localNotification = [noti copy];

                break;
            }
        }
    }
    //判断是否找到已经存在的相同key的推送
    if (!localNotification) {
        //不存在初始化
        localNotification = [[UILocalNotification alloc] init];
    }

    if (localNotification) {
        //不推送 取消推送
        [app cancelLocalNotification:localNotification];
        return;
    }
}   
</code></pre>

<p>}
&ndash;(void)removeAllNotification{</p>

<pre><code>[[UIApplication sharedApplication]cancelAllLocalNotifications];
</code></pre>

<p>}
```</p>

<p>程序在前台收到通知的处理：</p>

<p>```objc
&ndash; (void)application:(UIApplication <em>)application didReceiveLocalNotification:(UILocalNotification</em>)notification{</p>

<pre><code>UserObj *user = [[UsersInfoManage sharedInstance]readUser];
if (!user) {
    return;
}
if (user.isUseMusic) {
    //声音
    AudioServicesPlaySystemSound(1007);
}
if(user.isUseShake){
    AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
}
if ([[notification.userInfo objectForKey:@"key"]isEqualToString:notificationOAKey]) {
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"OA提醒" message:notification.alertBody delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil];
    [alert show];
}else{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"报餐提醒" message:notification.alertBody delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil];
    [alert show];
}
application.applicationIconBadgeNumber -= 1;
</code></pre>

<p>}
```</p>

<p>当点击图标进入程序时：</p>

<p>```objc
&ndash; (void)applicationDidBecomeActive:(UIApplication *)application
{</p>

<pre><code>application.applicationIconBadgeNumber = 0;
</code></pre>

<p>}
```</p>

<p>当在后台点击通知时：</p>

<p>```objc
&ndash; (BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary </em>)launchOptions
{</p>

<pre><code>self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
self.window.backgroundColor = [UIColor whiteColor];
[self.window makeKeyAndVisible];

application.applicationIconBadgeNumber = 0;

if(launchOptions!=nil){
    //从通知栏点击通知
    UILocalNotification* notification = [launchOptions objectForKey:UIApplicationLaunchOptionsLocalNotificationKey];
    if (notification != nil){
        [self application:application didReceiveLocalNotification:notification];
    }
}
return YES;
</code></pre>

<p>}
```</p>

<h4>后记</h4>

<p>其实一直想找个机会记录一下，可是老是拖了好久之后就忘了。一下子就2014年了，这一年将是很关键的一年，工作，爱情，还有学业各方面都走到了很关键的一步，希望今年能够顺利一点。</p>

<p>有好几本书，还有好多文章没看，希望能够坚持下去看，踏实提升实力，慢慢成熟，努力实现和你的承诺。一起加油。</p>
]]></content>
  </entry>
  
</feed>
